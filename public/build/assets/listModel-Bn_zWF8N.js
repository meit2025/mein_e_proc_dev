import{R as h,j as t}from"./app-ln2fqx89.js";import{f as i}from"./rupiahCurrencyFormat-D0mkqwcl.js";import{D as d}from"./DataGrid-FODRSXEe.js";import{M as w,F as C}from"./page-CMjVXRe9.js";import{B as g}from"./button-dz9CecE9.js";import{C as x}from"./CustomDialog-BY2pcJf-.js";const s=({isEmployee:a})=>{var m;const[e,l]=h.useState([]),n="reimburse",u={detail:`${n} view`,create:`${n} create`,update:`${n} update`,delete:`${n} delete`},c=r=>{l({id:r.id,name:r.name,family_status:r.family_status,maximumBalance:r.maximumBalance})},b=[...o(a),...a==0?[{field:"id",headerName:"Balance Family",width:200,filterable:!0,renderCell:r=>t.jsx(g,{onClick:()=>c({id:r.id,name:r.row.name,family_status:r.row.family_status,maximumBalance:r.row.maximumBalance}),className:"bg-slate-400 items-baseline",style:{marginRight:"10px",marginBottom:"10px"},children:"Check Balance"})}]:[]];return t.jsxs(t.Fragment,{children:[t.jsx(d,{role:u,columns:b,url:{url:w(a)},labelFilter:"search"}),t.jsxs(x,{onClose:()=>l([]),open:e.length!==0&&typeof e=="object",className:"md:max-w-[1200px]",children:[t.jsxs("h2",{children:["Reimburse Type : ",e==null?void 0:e.name]}),t.jsxs("h2",{children:["Relation : ",e==null?void 0:e.family_status]}),t.jsxs("h2",{children:["Maximum Balance : ",i((e==null?void 0:e.maximumBalance)??0)]}),e.length!==0&&typeof e=="object"&&t.jsx(d,{columns:f,url:{url:C(e==null?void 0:e.id,(m=e==null?void 0:e.family_status)==null?void 0:m.toLowerCase(),e==null?void 0:e.maximumBalance)},labelFilter:"search"})]})]})},$=Object.freeze(Object.defineProperty({__proto__:null,ListLayout:s,default:s},Symbol.toStringTag,{value:"Module"})),o=a=>[{field:"name",headerName:"Reimbursement Type",width:200,filterable:!0},...a==0?[{field:"family_status",headerName:"Relation",width:200,filterable:!0,renderCell:e=>e.row.family_status}]:[],{field:"interval_claim_period",headerName:"Interval Claim",width:200,filterable:!0},{field:"currency",headerName:"Currency",width:100,filterable:!1,sortable:!1},{field:"maximumBalance",headerName:"Maximum Balance",width:200,filterable:!1,sortable:!1,renderCell:e=>i(e.row.maximumBalance)},...a==1?[{field:"totalPaid",headerName:"Total Rembursement Paid",width:200,filterable:!1,sortable:!1,renderCell:e=>i(e.row.totalPaid)},{field:"totalUnpaid",headerName:"Total Rembursement Unpaid",width:200,filterable:!1,sortable:!1,renderCell:e=>i(e.row.totalUnpaid)},{field:"remainingBalance",headerName:"Remaining Balance",width:200,filterable:!1,sortable:!1,renderCell:e=>i(e.row.remainingBalance)},{field:"lastClaimDate",headerName:"Last Claim Date",width:200,filterable:!1,sortable:!1,renderCell:e=>{if(e.row.lastClaimDate!==null){const l=new Date(e.row.lastClaimDate);return`${l.getDate().toString().padStart(2,"0")}/${(l.getMonth()+1).toString().padStart(2,"0")}/${l.getFullYear()}`}else return"-"}},{field:"availableClaimDate",headerName:"Available Claim Date",width:200,filterable:!1,sortable:!1,renderCell:e=>{if(e.row.availableClaimDate!==null){const l=new Date(e.row.availableClaimDate);return`${l.getDate().toString().padStart(2,"0")}/${(l.getMonth()+1).toString().padStart(2,"0")}/${l.getFullYear()}`}else return"-"}}]:[]],f=[{field:"familyName",headerName:"Name",width:200,filterable:!0},{field:"totalPaid",headerName:"Total Rembursement Paid",width:200,filterable:!1,sortable:!1,renderCell:a=>i(a.row.totalPaid)},{field:"totalUnpaid",headerName:"Total Rembursement Unpaid",width:200,filterable:!1,sortable:!1,renderCell:a=>i(a.row.totalUnpaid)},{field:"remainingBalance",headerName:"Remaining Balance",width:200,filterable:!1,sortable:!1,renderCell:a=>i(a.row.remainingBalance)},{field:"lastClaimDate",headerName:"Last Claim Date",width:200,filterable:!1,sortable:!1,renderCell:a=>{if(a.row.lastClaimDate!==null){const e=new Date(a.row.lastClaimDate);return`${e.getDate().toString().padStart(2,"0")}/${(e.getMonth()+1).toString().padStart(2,"0")}/${e.getFullYear()}`}else return"-"}},{field:"availableClaimDate",headerName:"Available Claim Date",width:200,filterable:!1,sortable:!1,renderCell:a=>{if(a.row.availableClaimDate!==null){const e=new Date(a.row.availableClaimDate);return`${e.getDate().toString().padStart(2,"0")}/${(e.getMonth()+1).toString().padStart(2,"0")}/${e.getFullYear()}`}else return"-"}}],D=["My Reimbursement","Family Reimbursement"],B=()=>[t.jsx(s,{isEmployee:1},"My Reimbursement"),t.jsx(s,{isEmployee:0},"Family Reimbursement")],M=Object.freeze(Object.defineProperty({__proto__:null,columns:o,contentsTabs:B,familyBalanceColumns:f,labelsTabs:D},Symbol.toStringTag,{value:"Module"}));export{$ as L,M as a,B as c,D as l};
