import{R as h,j as t}from"./app-CTEjkM9T.js";import{f as i}from"./rupiahCurrencyFormat-CP-6egij.js";import{D as o}from"./DataGrid-DcG7mRb_.js";import{M as w,F as C}from"./page-CMjVXRe9.js";import{B as g}from"./button-BUc3i3RM.js";import{C as p}from"./CustomDialog-OlZtULtV.js";const d=({isEmployee:a})=>{var m;const[e,l]=h.useState([]),n="reimburse",f={detail:`${n} view`,create:`${n} create`,update:`${n} update`,delete:`${n} delete`},c=r=>{l({id:r.id,reimburseType:r.reimburseType,relation:r.relation,maximumBalance:r.maximumBalance})},b=[...s(a),...a==0?[{field:"id",headerName:"Balance Family",width:200,filterable:!0,renderCell:r=>t.jsx(g,{onClick:()=>c({id:r.id,reimburseType:r.row.reimburseType,relation:r.row.relation,maximumBalance:r.row.maximumBalance}),className:"bg-slate-400 items-baseline",style:{marginRight:"10px",marginBottom:"10px"},children:"Check Balance"})}]:[]];return t.jsxs(t.Fragment,{children:[t.jsx(o,{role:f,columns:b,url:{url:w(a)},labelFilter:"search"}),t.jsxs(p,{onClose:()=>l([]),open:e.length!==0&&typeof e=="object",className:"md:max-w-[1200px]",children:[t.jsxs("h2",{children:["Reimburse Type : ",e==null?void 0:e.reimburseType]}),t.jsxs("h2",{children:["Relation : ",e==null?void 0:e.relation]}),t.jsxs("h2",{children:["Maximum Balance : ",i((e==null?void 0:e.maximumBalance)??0)]}),e.length!==0&&typeof e=="object"&&t.jsx(o,{columns:u,url:{url:C(e==null?void 0:e.id,(m=e==null?void 0:e.relation)==null?void 0:m.toLowerCase(),e==null?void 0:e.maximumBalance)},labelFilter:"search"})]})]})},M=Object.freeze(Object.defineProperty({__proto__:null,ListLayout:d,default:d},Symbol.toStringTag,{value:"Module"})),s=a=>[{field:"reimburseType",headerName:"Reimbursement Type",width:200,filterable:!0},...a==0?[{field:"relation",headerName:"Relation",width:200,filterable:!0,renderCell:e=>e.row.relation}]:[],{field:"intervalClaim",headerName:"Interval Claim",width:200,filterable:!0},{field:"currency",headerName:"Currency",width:100,filterable:!0},{field:"maximumBalance",headerName:"Maximum Balance",width:200,filterable:!1,renderCell:e=>i(e.row.maximumBalance)},...a==1?[{field:"totalPaid",headerName:"Total Rembursement Paid",width:200,filterable:!1,renderCell:e=>i(e.row.totalPaid)},{field:"totalUnpaid",headerName:"Total Rembursement Unpaid",width:200,filterable:!1,renderCell:e=>i(e.row.totalUnpaid)},{field:"remainingBalance",headerName:"Remaining Balance",width:200,filterable:!1,renderCell:e=>i(e.row.remainingBalance)},{field:"lastClaimDate",headerName:"Last Claim Date",width:200,filterable:!1,renderCell:e=>{if(e.row.lastClaimDate!==null){const l=new Date(e.row.lastClaimDate);return`${l.getDate().toString().padStart(2,"0")}/${(l.getMonth()+1).toString().padStart(2,"0")}/${l.getFullYear()}`}else return"-"}},{field:"availableClaimDate",headerName:"Available Claim Date",width:200,filterable:!1,renderCell:e=>{if(e.row.availableClaimDate!==null){const l=new Date(e.row.availableClaimDate);return`${l.getDate().toString().padStart(2,"0")}/${(l.getMonth()+1).toString().padStart(2,"0")}/${l.getFullYear()}`}else return"-"}}]:[]],u=[{field:"familyName",headerName:"Name",width:200,filterable:!0},{field:"totalPaid",headerName:"Total Rembursement Paid",width:200,filterable:!0,renderCell:a=>i(a.row.totalPaid)},{field:"totalUnpaid",headerName:"Total Rembursement Unpaid",width:200,filterable:!1,renderCell:a=>i(a.row.totalUnpaid)},{field:"remainingBalance",headerName:"Remaining Balance",width:200,filterable:!1,renderCell:a=>i(a.row.remainingBalance)},{field:"lastClaimDate",headerName:"Last Claim Date",width:200,filterable:!1,renderCell:a=>{if(a.row.lastClaimDate!==null){const e=new Date(a.row.lastClaimDate);return`${e.getDate().toString().padStart(2,"0")}/${(e.getMonth()+1).toString().padStart(2,"0")}/${e.getFullYear()}`}else return"-"}},{field:"availableClaimDate",headerName:"Available Claim Date",width:200,filterable:!1,renderCell:a=>{if(a.row.availableClaimDate!==null){const e=new Date(a.row.availableClaimDate);return`${e.getDate().toString().padStart(2,"0")}/${(e.getMonth()+1).toString().padStart(2,"0")}/${e.getFullYear()}`}else return"-"}}],x=["My Reimbursement","Family Reimbursement"],D=()=>[t.jsx(d,{isEmployee:1},"My Reimbursement"),t.jsx(d,{isEmployee:0},"Family Reimbursement")],y=Object.freeze(Object.defineProperty({__proto__:null,columns:s,contentsTabs:D,familyBalanceColumns:u,labelsTabs:x},Symbol.toStringTag,{value:"Module"}));export{M as L,y as a,D as c,x as l};
